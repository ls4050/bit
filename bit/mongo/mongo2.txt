1. 모든 팀원들의 이름을 출력한다.
db.banjang.find(null,{name:1, _id:0})

2. 모든 팀원들의 이름과 나이를 나이가 적은 순으로 출력한다.
db.banjang.find(null,{name:1, _id:0, age:1}).sort({"age":1})

3. 나이가 제일 어린 팀원의 이름과 나이를 출력한다.
db.banjang.find(null,{name:1, _id:0, age:1}).sort({"age":1}).limit(1)

4. 모든 팀원들에 대해서 이름과 좋아하는 음식을 출력한다.
db.banjang.find(null,{name:1, _id:0, food:1})

5. 내 이름에 해당하는 팀원에 좋아하는 책을 추가 하는데 책의 정보는 
     제목 : 처음 시작하는 스프링 프레임워크
     출판사 : 부크크
     장르 : IT
db.banjang.update({ "name":"이원석"}, {$push:{"favoritebook":{"book":"처음 시작하는 스프링 프레임워크", "publisher" : "부크크", "genre ":"IT"}}})

6. 팀원들이 좋아하는 책의 제목을 출력한다.
    팀원마다 각각 출력한다.
db.banjang.find(null, {_id:0, "favoritebook.book":1})
// .을 사용하여 접근할때는 무조건 인용부호를 써라

7. 내 이름에 해당하는 팀원의 모든 정보를 출력한다.
db.banjang.find({name:"이원석"}, {_id:0})


8. 내 이름에 해당하는 팀원이 좋아하는 칼라를 출력한다.
db.banjang.find({name:"이원석"}, {_id:0, color:1})

9. 나이가 25세 이상인 팀원들의 이름과 나이를 출력한다.
db.banjang.find({age:{$gte:25}}, {_id:0})

10. '고기'를 좋아하는 팀원들의 정보를 출력한다. 없으면 '고기를 좋아하는 팀원은 없습니다.'를 출력한다.
     (리턴값을 변수에 담아서 if 문과 while 문 사용)
var cursor = db.banjang.find({food:"고기"})
if(cursor) { while(cursor.hasNext()){ printjson(cursor.next()) } } else{ print("고기를 좋아 하는 팀원은 없습니다.");}

11. 좋아하는 책이 2권인 팀원들의 이름과 책 제목을 출력한다.
    (https://docs.mongodb.com/v4.0/tutorial/query-arrays/ 도큐먼트 참조)
db.banjang.find({"favoritebook":{$size:2}},{_id:0, name:1, "favoritebook.book":1})

12. 좋아하는 책의 장르에 'IT'가 존재하는 팀원들의 이름과 좋아하는 책의 객체 정보를 출력한다.
db.banjang.find({"favoritebook.genre ":"IT"},{_id:0, favoritebook:1})
// 임베디드형식

